# Copyright (c) 2018-2019 AccelByte Inc. All Rights Reserved.
# This is licensed software from AccelByte Inc, for limitations
# and restrictions contact your company contract manager.

version: '3'
services:
  jaeger:
    image: jaegertracing/all-in-one:1.37.0
    ports:
      - "16686:16686"
      - "14250:14250"

  envoy:
    image: envoyproxy/envoy:v1.22.5
    command: ["--service-cluster", "envoyproxy", "--config-path", "/etc/envoy/envoy.yaml"]
    ports:
      - "10000:10000"
      - "9901:9901"
    volumes:
      - ./compose-config/envoy.yaml:/etc/envoy/envoy.yaml
      - ./compose-config/certs/server_cert.pem:/home/certs/server_cert.pem
      - ./compose-config/certs/server_cert.key:/home/certs/server_cert.key
      - ./compose-config/certs/root_CA_cert.pem:/home/certs/root_CA_cert.pem
    extra_hosts:
      - host.docker.internal:host-gateway

  otel-collector:
    image: otel/opentelemetry-collector-contrib:0.58.0
    command: ["--config=/etc/otel-collector-config.yaml"]
    depends_on:
      - tempo
      - jaeger
    environment:
      - GRAPHANA_CLOUD_TRACES_BASIC_AUTH
      - GRAPHANA_CLOUD_METRICS_BASIC_AUTH
      - GRAPHANA_CLOUD_TRACES_SAMPLING_PERCENTAGE
      - GRAPHANA_CLOUD_TRACES_SAMPLING_STATUS_CODES
    volumes:
      - ./compose-config/otel-collector-config.yaml:/etc/otel-collector-config.yaml
    ports:
      - "9411:9411"   # Zipkin receiver
    extra_hosts:
      - host.docker.internal:host-gateway

  tempo:
    image: grafana/tempo:latest
    command: [ "-config.file=/etc/tempo.yaml" ]
    volumes:
      - ./compose-config/tempo-local.yaml:/etc/tempo.yaml
    ports:
      - "14268"  # jaeger ingest
      - "3200:3200"   # tempo
      - "4317"  # otlp grpc
      - "4318"  # otlp http
      - "9411"   # zipkin
    extra_hosts:
      - host.docker.internal:host-gateway

  loki:
    image: grafana/loki
    ports:
      - "3100:3100"
    volumes:
      - ./compose-config/loki-config.yaml:/etc/loki/local-config.yaml
    command: -config.file=/etc/loki/local-config.yaml
    extra_hosts:
      - host.docker.internal:host-gateway

  prometheus:
    image: prom/prometheus:latest
    command:
      - --config.file=/etc/prometheus.yaml
      - --web.enable-remote-write-receiver
      - --enable-feature=exemplar-storage
    volumes:
      - ./compose-config/prometheus.yaml:/etc/prometheus.yaml
    ports:
      - "9090:9090"
    extra_hosts:
      - host.docker.internal:host-gateway

  grafana:
    image: grafana/grafana:9.1.6
#    volumes:
#      - ./compose-config/grafana-datasources.yaml:/etc/grafana/provisioning/datasources/datasources.yaml
    environment:
      - GF_AUTH_ANONYMOUS_ENABLED=true
      - GF_AUTH_ANONYMOUS_ORG_ROLE=Admin
      - GF_AUTH_DISABLE_LOGIN_FORM=true
    ports:
      - "3000:3000"
    extra_hosts:
      - host.docker.internal:host-gateway

  fluentd:
    image: fluent/fluentd:v1.15
    command: ["-v"]
    volumes:
      - ./compose-config/fluent.conf:/fluentd/etc/fluent.conf
    ports:
      - "24224:24224"
      - "24224:24224/udp"

  fluentd-loki:
    image: grafana/fluent-plugin-loki:master  # based on 1.9 and not having the updated http plugin for json-array
    command: ["-v"]
    environment:
      - LOKI_URL
      - LOKI_USERNAME
      - LOKI_PASSWORD
    volumes:
      - ./compose-config/fluent-loki.conf:/fluentd/etc/fluent.conf
    ports:
      - "24225:24225"
      - "24225:24225/udp"
receivers:
  zipkin:
  prometheus:
    config:
      scrape_configs:
        - job_name: 'CustomMatchMakingFunctionGRPCJava-metrics'
          metrics_path: '/actuator/prometheus'
          scrape_interval: 60s
          scrape_timeout: 10s
          static_configs:
            - targets: ['host.docker.internal:8080']

exporters:
  jaeger:
    endpoint: jaeger:14250
    tls:
      insecure: true
  otlp/graphana-cloud:
    endpoint: "tempo-us-central1.grafana.net:443"
    headers:
      authorization: Basic ${GRAPHANA_CLOUD_TRACES_BASIC_AUTH}
  otlp/graphana-local:
    endpoint: tempo:4317
    tls:
      insecure: true
  prometheusremotewrite:
    endpoint: 'http://prometheus:9090/api/v1/write'
    tls:
     insecure: true


processors:
  batch:
  tail_sampling:
    policies:
      - type: string_attribute
        string_attribute:
          key: http.target
          values:
            - ^\/(?:metrics\/.*|health.*|actuator\/.*)$
          enabled_regex_matching: true
          invert_match: true
      - type: status_code
        status_code:
          status_codes:
            - ERROR
      - type: latency
        latency:
          threshold_ms: 5000
      - type: probabilistic
        probabilistic:
          sampling_percentage: ${GRAPHANA_CLOUD_TRACES_SAMPLING_PERCENTAGE}

service:
  telemetry:
    logs:
      level: "info"
  pipelines:
    traces:
      receivers: [zipkin]
      processors: [batch,tail_sampling]
      exporters: [otlp/graphana-local,otlp/graphana-cloud,jaeger]
    metrics:
      receivers: [prometheus]
      processors: [batch]
      exporters: [prometheusremotewrite]
